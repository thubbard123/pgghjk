<?xml version="1.0" encoding="utf-8"?>
<html MadCap:conditions="Products.D2H" MadCap:lastBlockDepth="7" MadCap:lastHeight="974" MadCap:lastWidth="1146" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="" style="mc-master-page: url('..\..\Resources\MasterPages\PDF_Topics\D2H\D2HSandcastle.flmsp');">
    <head>
        <link href="" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>
            <MadCap:keyword term="Microsoft Sandcastle" />Converting Documenter for .NET Projects to Sandcastle Projects</h1>
        <p>You can convert Documenter for .NET projects to Sandcastle.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>How to Convert a Legacy Project</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <ol>
                    <li>Make a backup copy of your entire project before conversion.</li>
                    <li>Open the Doc-To-Help project (.d2h).</li>
                    <li>Right-click the Word document generated by Documenter for .NET and choose <span class="Emphasis">Remove Document</span>. Delete the Word document file from your project folder.</li>
                    <li>Using the Project Styles dialog<MadCap:conditionalText MadCap:conditions="General.OnlineLive"> (see <MadCap:xref href="../../Styles/D2H/About Project_Styles_and_Topic_Types.htm">Project Styles and Topic Types</MadCap:xref>)</MadCap:conditionalText>, delete the character styles that are used for creating links from narrative to reference. They are: all Link ... styles (Link Class, Link Constructor,..., Link Type - 15 styles) and two additional styles: "MSDN Link style" and "Block Key." (17 character styles total). Be careful not to delete any other styles.</li>
                    <li>In all narrative Word source documents, change the attached template to D2H_sandcastle_src.dotx.</li>
                    <li>Add the plugin document: in Doc-To-Help choose <span class="Emphasis">Project&gt;Plugins</span> and select <span class="Emphasis">Create New Plugin Document</span>. </li>
                    <li>In the New Plugin Document dialog, enter its name in the <span class="Emphasis">XMLDocuments</span> folder. ("Reference" is the suggested name, but any name is okay.)</li>
                    <li>Double-click the plugin document. The Properties for Generating Reference dialog opens.</li>
                    <li>Select <span class="Emphasis">Import</span>, click the <span class="Emphasis">Browse</span> button, and select the Documenter for .NET project file (.d2hdotnet) that you are converting. </li>
                    <li>This is the main point in the conversion process: the converter scans your Documenter for .NET project (.d2hdotnet) and converts its settings to properties of the plugin document (.xmlprop). </li>
                    <li>When the conversion is finished, check that everything you need is converted (double-click on the plugin document to open the Properties for Generating Reference dialog):</li>
                    <ul>
                        <li>List of assemblies and XML files, see the Assemblies node.</li>
                        <li>XSLT transformation applied to the XML file, see the Generation node, XSLT file to transform source code XML field.</li>
                        <li>Elements excluded from documentation, see unchecked nodes in the tree in the Element filter node.</li>
                    </ul>
                    <li>Right-click on the plugin document and from the menu choose <span class="Emphasis">Generate</span>.</li>
                    <li>In Doc-To-Help,select <span class="Emphasis">Home&gt;Select Target</span>, and choose the target.</li>
                    <li>Click the <span class="Emphasis">Rebuild Target</span> button. The target will be formatted with the MSDN reference style.</li>
                </ol>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot MadCap:conditions="General.OnlineLive">Notes</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody class="Final">
                <p class="note" MadCap:autonum="&lt;b&gt;&lt;span style=&quot;color: #bed230;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;">Links from narrative to reference created using the "Link ..." styles, such as Link Class, Link Method, Link Property, and so on, should work after this conversion. But links created with C1H Jump and Link Tag styles will probably not work, because the titles of generated topics and therefore their linktags have changed (and these two styles have a linktag explicitly specified in the hotspot itself). Those links must be fixed manually.</p>
                <p class="note" MadCap:autonum="&lt;b&gt;&lt;span style=&quot;color: #bed230;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;">The Documenter for .NET project is a legacy Doc-To-Help project type that was removed in 2008.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>