<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Products.Flare" MadCap:lastBlockDepth="8" MadCap:lastHeight="3744" MadCap:lastWidth="1159" class="" style="mc-master-page: url('..\..\Resources\MasterPages\PDF_Topics\Flare\FlareHTML5.flmsp');">
    <head><title></title>
        <meta name="description" content="Details the CSH&#160;calls used by a developer to map a WebHelp 2.0 (HTML5) system generated by MadCap&#160;Flare to a software application. " />
        <link href="" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>
            <MadCap:concept term="FilterCSH" />
            <MadCap:concept term="ConnectingHTML5" />
            <MadCap:keyword term="Output:HTML5;Context-sensitive Help:HTML5;HTML5:context-sensitive Help;HTML5:distributing" />CSH Calls for HTML5 Output—Developers</h1>
        <MadCap:snippetBlock src="../../Resources/Snippets/InformationForDevelopers.flsnp" />
        <p>Use the following information if you are producing <MadCap:variable name="Outputs.HTML5" /> and want to incorporate context-sensitive Help (CSH) into the software application.</p>
        <p>There are two methods you can use.</p>
        <ul>
            <li><span class="SetOffFirstLevel"><MadCap:keyword term="JavaScript:WebHelp" />Method 1—JavaScript </span>Using this method requires calling a JavaScript function that Flare provides. </li>
            <li><span class="SetOffFirstLevel">Method 2—URL </span>Using this method, you can create a hyperlink to launch the Help system. </li>
        </ul>
        <h2 MadCap:conditions="FlareGuides.FlareCSHGuide,FlareGuides.FlareHTML5Guide">Which Method is Best for You?</h2>
        <MadCap:dropDown>
            <MadCap:dropDownHead class="OnlineOnly">
                <MadCap:dropDownHotspot>which method is best for you?</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Each method has its unique benefits. Generally speaking, the JavaScript method lets you have more control, whereas the URL method is a bit more quick and simple.</p>
                <p>One reason to choose the JavaScript method is to better control the window size and location. With the URL method, the browser window automatically starts to open at the same size and location as the previous time that browser window was opened. But if you have specified a different size and location for your output window, the window will visibly move and resize accordingly. The JavaScript method prevents this type of behavior by opening the window directly to the size and location you specified. You would set the window size and location in the skin. Then in the JavaScript call you would specify the appropriate skin.</p>
                <p>Another benefit to using the JavaScript method is that it is required in order for the Browser Settings option to take effect. This option can be found on the Setup tab of the Skin Editor. <MadCap:conditionalText MadCap:conditions="General.OnlineLive">See <MadCap:xref href="../../Skins/More_About_Skins/Specifying_Browser_Settings.htm">Specifying Browser Settings for WebHelp Output</MadCap:xref>.</MadCap:conditionalText></p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>how to use javascript to open html5 output</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <ol>
                    <li><span class="SetOffFirstLevel">Author </span>Add a header file to your project.</li>
                    <li><span class="SetOffFirstLevel">Author </span>Add an alias file to your project.</li>
                    <li>
                        <p><span class="SetOffFirstLevel">Author </span>In the Alias Editor, create and assign an identifier (ID) for the topic that you want to link to from the CSH call. </p>
                        <p>For example, if you have a topic called "Welcome.htm," you might create a new ID and also name it "Welcome." Then you might assign a value of 1000 to it. You would make sure that the topic Welcome.htm is assigned to the ID. </p>
                        <p>Finally, an optional step in the Alias Editor is to assign a <MadCap:keyword term="Skins:context-sensitive Help" />skin to that ID. However, you can bypass this step and specify a skin later when you create the actual JavaScript, or you can choose not to select a skin at all.</p>
                    </li>
                    <li><span class="SetOffFirstLevel">Author </span>Build your Help system using an <MadCap:variable name="Outputs.HTML5" /> target and publish the output files to the final destination.</li>
                    <li>
                        <p><span class="SetOffFirstLevel">Developer </span>Add a reference to the JavaScript file (which is created automatically when the author builds the output). This .js file should be named "csh.js." The reference to the JavaScript file should use the following format: &lt;script type="text/javascript" src="[path of file]/csh.js"&gt;&lt;/script&gt;. </p>
                        <p class="note" MadCap:autonum="&lt;b&gt;&lt;span style=&quot;color: #bed230;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;">Make sure you use forward slashes (/) in the src path to the file, even if the file is referenced locally. </p>
                    </li>
                    <li>
                        <p><span class="SetOffFirstLevel">Developer</span> Create a trigger and add the command to let users open the Help system. Here is a format that you can use to add a button.</p>
                        <div class="example">
                            <p class="Code">&lt;input type="button" value="Open Help System" onclick="MadCap.OpenHelp(ID, skin name, search string, first pick search string value );" /&gt;</p>
                        </div>
                        <p>You can change the input type and the value if necessary. The most important parts that you will adjust are the elements within parentheses ID, skin name, search string, first pick search string value).</p>
                        <ul class="FirstLevel">
                            <li><span class="SetOffFirstLevel">ID </span>This is the <MadCap:keyword term="Context-sensitive Help:identifiers" />CSH ID that the author created in Flare (see Step 3 above). This can be either the ID name or value. The topic and skin associated with the ID will be used. If no skin is associated with the ID in Flare, the skin name that you provide in this command will be used. Alternatively, the ID may contain a topic path. In this case, the specified topic will be loaded with the skin that is specified in this command. The topic path must be relative to the Content folder of the Flare project. You also have the option of entering "null" instead of an ID to use the Help system's default starting topic.</li>
                            <li><span class="SetOffFirstLevel"><MadCap:keyword term="Skins:context-sensitive Help" />Skin Name </span>This is the name of the skin to use when opening the Help system. If a skin has been assigned to the ID in Flare (see Step 3 above) <span class="EmphasisItalic">and</span> you enter a skin name in this command, the skin name in the command will take precedence. You also have the option of entering "null" instead of a skin name if you want to use the Help system's default skin or to use the skin that is associated with the CSH ID in Flare.</li>
                            <li><span class="SetOffFirstLevel">Search String </span>This is an optional element that automatically performs a search for a specific string.</li>
                            <li><span class="SetOffFirstLevel">First Pick Search String Value </span>This element can be used in conjunction with the search string. If you use the first pick option, you can include a true or false value. If the value is true, the first topic found with the specified search string will be opened automatically. If the value is false, the search results will simply be displayed; the first topic will not be opened automatically.</li>
                        </ul>
                    </li>
                </ol>
                <MadCap:dropDown class="SecondLevel">
                    <MadCap:dropDownHead>
                        <MadCap:dropDownHotspot MadCap:conditions="General.OnlineLive">examples</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody class="Final">
                        <p>In the following example, the topic and skin associated with "Welcome" will be used. No search string information is included.</p>
                        <div class="example">
                            <p class="Code">&lt;input type="button" value="Open Help System" onclick="MadCap.OpenHelp('Welcome', null, null, null );" /&gt; </p>
                        </div>
                        <p>In the following example, the topic associated with "Welcome" will be used. "BlueSkin" will override the skin associated with "Welcome." No search string information is included.</p>
                        <div class="example">
                            <p class="Code">&lt;input type="button" value="Open Help System" onclick="MadCap.OpenHelp('Welcome', 'BlueSkin', null, null );" /&gt;</p>
                        </div>
                        <p>In the following example, the topic and skin associated with the ID value 1000 will be used. No search string information is included.</p>
                        <div class="example">
                            <p class="Code">&lt;input type="button" value="Open Help System" onclick="MadCap.OpenHelp(1000, null, null, null );" /&gt;</p>
                        </div>
                        <p>In the following example, the topic associated with the ID value 1000 will be used. "BlueSkin" will override the skin associated with ID value 1000. No search string information is included.</p>
                        <div class="example">
                            <p class="Code">&lt;input type="button" value="Open Help System" onclick="MadCap.OpenHelp(1000, 'BlueSkin', null, null );" /&gt;</p>
                        </div>
                        <p>In the following example, "Company/Employees.htm" will be used with the default skin. No search string information is included.</p>
                        <div class="example">
                            <p class="Code">&lt;input type="button" value="Open Help System" onclick="MadCap.OpenHelp('Company/Employees.htm', null, null, null );" /&gt; </p>
                        </div>
                        <p>In the following example, both the default topic and skin will be used. A search will automatically be performed for the words "quarterly report," but the first topic found in the search <span class="EmphasisItalic">will not</span> be opened automatically.</p>
                        <div class="example">
                            <p class="Code">&lt;input type="button" value="Open Help System" onclick="MadCap.OpenHelp(null, null, 'quarterly report', false );" /&gt; </p>
                        </div>
                        <p>In the following example, the default topic will be used with "BlueSkin." A search will automatically be performed for the words "quarterly report," and the first topic found in the search <span class="EmphasisItalic">will</span> be opened automatically.</p>
                        <div class="example">
                            <p class="Code">&lt;input type="button" value="Open Help System" onclick="MadCap.OpenHelp(null, 'BlueSkin', 'quarterly report', true );" /&gt;</p>
                        </div>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:snippetBlock src="../../Resources/Snippets/EmptyPageBreakAfter.flsnp" MadCap:conditions="FlareGuides.FlareCSHGuide,FlareGuides.FlareHTML5Guide" />
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>how to use a url to open html5 output</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody class="Final">
                <ol>
                    <li><span class="SetOffFirstLevel">Author </span>(Optional) Add a header file to your project.</li>
                    <li><span class="SetOffFirstLevel">Author </span>(Optional) Add an alias file to your project.</li>
                    <li>
                        <p><span class="SetOffFirstLevel">Author </span>(Optional) In the Alias Editor, create and assign IDs for the topics to which you want to provide links. If you do not want to create a header file, alias file, and IDs for topics, you can instead use the file names for the topics to which you want to link.</p>
                        <p>An optional step in the Alias Editor is to assign a skin to that ID. <MadCap:conditionalText MadCap:conditions="General.Future">However, you can bypass this step and specify a skin later when you create the actual link, or you can choose not to select a skin at all.xxxmay add this back in if they fix bug 55794xxx</MadCap:conditionalText></p>
                    </li>
                    <li><span class="SetOffFirstLevel">Author </span>Build your Help system using an <MadCap:variable name="Outputs.HTML5" /> target and publish the output files to the final destination.</li>
                    <li>
                        <p><span class="SetOffFirstLevel">Developer </span>Create a trigger and add a link to let users open a specific area of the Help system. </p>
                        <p>There is a certain amount of flexibility in terms of how you create the link and what you can include in it. Here is the basic structure of the link.</p>
                        <div class="example">
                            <p class="Code">[main entry file].htm#cshid=[ID number, ID name, or topic path/name]&amp;searchQuery=[search string]&amp;firstPick=true<MadCap:conditionalText MadCap:conditions="General.Future">&amp;skinName=[skin name]xxxmay add this back in if they fix bug 55794xxx</MadCap:conditionalText></p>
                        </div>
                        <p>After the hash tag (#), you can specify any combination of the parameters (cshid, searchQuery, firstPick<MadCap:conditionalText MadCap:conditions="General.Future">, skinNamexxxmay add this back in if they fix bug 55794xxx</MadCap:conditionalText>), separated by ampersands (&amp;). The order of the parameters does not matter.</p>
                        <ul class="FirstLevel">
                            <li><span class="SetOffFirstLevel">Main entry file </span>Provide the path to the main entry file for your output. The file name is determined by whatever you enter into the <span class="Emphasis">Output File</span> field in the <span class="Emphasis">General</span> tab of the Target Editor. If you do not provide a name in this field, the name "Default" will be used.</li>
                            <li>
                                <p><span class="SetOffFirstLevel">cshid </span>This is the CSH ID that you created in Flare (see Step 3 above). This can be either the identifier name or value. The topic and skin that is associated with the ID will be used (unless you override it in this link by specifying a different skin name). Alternatively, you can enter the path and name of the specific topic to which you want to link. If you use this element, you do not need to create an ID as described above. The topic path must be relative to the Content folder of the Flare project.</p>
                            </li>
                        </ul>
                        <MadCap:pageBreak MadCap:conditions="FlareGuides.FlareCSHGuide" />
                        <ul class="FirstLevel">
                            <li><span class="SetOffFirstLevel">searchQuery </span>This is an optional element that automatically performs a search for a specific string.</li>
                            <li><span class="SetOffFirstLevel">firstPick </span>This element can be used in conjunction with the search string. If you include the first pick option, the first topic found with the specified search string <span class="EmphasisItalic">will</span> be opened automatically. If you do not include this element, the search results will simply be displayed; the first topic <span class="EmphasisItalic">will not</span> be opened automatically.</li>
                            <li MadCap:conditions="General.Future"><span class="SetOffFirstLevel"><MadCap:keyword term="Skins:context-sensitive Help" />skinName </span>If you use a map ID in the link, the skin associated with that ID (if any) will be used to display the Help. However, you can specify a skin directly in the link, which will override the skin associated with that topic in the alias file.xxxmay add this bullet back in if they fix bug 55794xxx</li>
                        </ul>
                    </li>
                </ol>
                <MadCap:dropDown class="SecondLevel">
                    <MadCap:dropDownHead>
                        <MadCap:dropDownHotspot MadCap:conditions="General.OnlineLive">examples</MadCap:dropDownHotspot>
                    </MadCap:dropDownHead>
                    <MadCap:dropDownBody class="Final">
                        <div class="example">
                            <p class="exampleHeadTextEmpty">examples</p>
                            <p class="Code">&lt;a href="http://my.mycompany.com/Default.htm#cshid=1000&amp;searchQuery=World Cup Standings&amp;firstPick=true<MadCap:conditionalText MadCap:conditions="General.Future">&amp;skinName=Greenxxxmay add this back in if they fix bug 55794xxx</MadCap:conditionalText>"&gt;Click here to open&lt;/a&gt;</p>
                            <p class="Code">&lt;a href="http://my.mycompany.com/Default.htm#cshid=Soccer&amp;searchQuery=World Cup Standings&amp;firstPick=true<MadCap:conditionalText MadCap:conditions="General.Future">&amp;skinName=Greenxxxmay add this back in if they fix bug 55794xxx</MadCap:conditionalText>"&gt;Click here to open&lt;/a&gt;</p>
                            <p class="Code">&lt;a href="http://my.mycompany.com/Default.htm#cshid=Soccer.htm&amp;searchQuery=World Cup Standings&amp;firstPick=true<MadCap:conditionalText MadCap:conditions="General.Future">&amp;skinName=Greenxxxmay add this back in if they fix bug 55794xxx</MadCap:conditionalText>"&gt;Click here to open&lt;/a&gt;</p>
                        </div>
                        <p>In these examples, the following were used.</p>
                        <ul style="list-style-type: square;">
                            <li>Default.htm = main entry file name</li>
                            <li>1000 = CSH ID value</li>
                            <li>Soccer = CSH ID name</li>
                            <li>Soccer.htm = topic in the project, at the root level of the Content Explorer</li>
                            <li>World Cup Standings = search term</li>
                            <li MadCap:conditions="General.Future">Green = skin namexxxmay add this back in if they fix bug 55794xxx</li>
                        </ul>
                    </MadCap:dropDownBody>
                </MadCap:dropDown>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p MadCap:conditions="General.OnlineNotWebHelp">
            <MadCap:conceptLink term="ConnectingHTML5" />
        </p>
    </body>
</html>