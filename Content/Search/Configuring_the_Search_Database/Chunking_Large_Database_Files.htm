<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="1313" MadCap:lastWidth="956" MadCap:conditions="Products.Flare" class="" style="mc-master-page: url('..\..\Resources\MasterPages\PDF_Topics\Flare\FlareSearch.flmsp');">
    <head>
        <meta name="description" content="Describes how MadCap Flare builds chunk files for the search database and shows you how to set the maximum file size for the chunks in your project." />
        <link href="" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>
            <MadCap:keyword term="Search:chunk files" />
            <MadCap:concept term="FilterSearch" />
            <MadCap:concept term="ConfiguringSearchDatabase" />Chunking Large Search Database Files</h1>
        <h1 class="Invisible" MadCap:conditions="General.OnlineLive">
            <MadCap:keyword term="Search:chunk files" />Chunking Large Search Database Files</h1>
        <MadCap:snippetBlock src="../../Resources/Snippets/Banners/Flare/Feature_Supported/DotNet_HTML5_WebHelp_WHMobile_WHPlus_WHAIR.flsnp" />
        <p>When Flare builds your output files, it also automatically generates a search index. The search database is split into a series of chunk files with JS&#160;file name extensions. These "chunks" are very important to your project, because they help to improve the performance of the search feature.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>search database files and maximum chunk size</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Important things to know about chunk files include:</p>
                <ul>
                    <li>
                        <p><span class="SetOffFirstLevel">Chunk Files are Automatically Created in Sequential Order </span>The build process automatically creates a search database and then splits the database information into individual chunks. Each chunk is represented by a chunk file. The naming convention used for these files is sequential (e.g., SearchPhrase_Chunk0.js,&#160;SearchPhrase_Chunk1.js, SearchPhrase_Chunk2.js). After running a build, these files are required by the target output and stored in the target's Output\Data folder.</p>
                        <p>
                            <img src="../../Resources/Images/search_database_chunk_files.png" class="MaxWidth100Percent" />
                        </p>
                        <p>If you installed Flare in the default location, the path to the Output\Data folder is:  <span class="TypedEntry">C:\Users\[user name]\Documents\My Projects\[project name]\Output\[user name]\[target name]\Data</span></p>
                    </li>
                    <li><span class="SetOffFirstLevel">There are Three Kinds of Chunk Files </span>Search chunks come in three varieties:&#160;SearchPhrase chunks, SearchStem chunks, and SearchTopic chunks. Each chunk type holds a different kind of data. By separating search chunks into different files that contain phrases, stems, and topics, Flare's search engine can locate data faster.</li>
                    <li><span class="SetOffFirstLevel">Number of Chunk Files&#160;Depends on Project Content and Settings </span>The total number of chunk files generated by the build process depends entirely on the size of your project and the search performance settings that you enable. As a general rule, smaller projects have fewer chunk files than larger projects. Other factors to consider include the maximum chunk size setting  and whether the partial-word search feature is enabled. See <MadCap:xref href="Enabling_Partial_Word_Search.htm">Enabling Partial-Word Search</MadCap:xref>.</li>
                    <li><span class="SetOffFirstLevel">New Chunk Files are Generated With Every Build </span>When you update your content and build new output files, Flare generates new chunk files to ensure your updated content can be retrieved when end users perform a search. If you are publishing server-based output, always ensure that your publishing and upload process for your output includes the updated chunk files.</li>
                </ul>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:snippetBlock src="../../Resources/Snippets/EmptyPageBreakAfter.flsnp" MadCap:conditions="FlareGuides.FlareSearchGuide" />
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>how to set the maximum chunk size for search database files</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody class="Final">
                <ol>
                    <li>In the Project Organizer, open the desired target.</li>
                    <li>In the Target Editor, click the <span class="Emphasis">Performance</span> tab.</li>
                    <li>
                        <p>In the <span class="Emphasis">Search Database</span> section, place a check mark in the <span class="Emphasis">Chunk Large Search Database Files</span> box. Then select a value in the <span class="Emphasis">Maximum Chunk Size</span> box.</p>
                        <p>
                            <img src="../../Resources/Images/search_database_chunk_file_size.png" class="MaxWidth100Percent" />
                        </p>
                        <p class="note" MadCap:autonum="&lt;b&gt;&lt;span style=&quot;color: #bed230;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;">The smallest maximum file size for a chunk file is 10,000 bytes. The largest maximum file size is 100,000 bytes. The default setting for the maximum chunk file size is set to 30,000 bytes. </p>
                    </li>
                    <li>
                        <MadCap:snippetText src="../../Resources/Snippets/StepsGeneral/SaveYourWork.flsnp" />
                    </li>
                </ol>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p MadCap:conditions="General.OnlineNotWebHelp">
            <MadCap:conceptLink term="ConfiguringSearchDatabase" />
        </p>
    </body>
</html>